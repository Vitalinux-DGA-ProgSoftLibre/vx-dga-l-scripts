#!/bin/bash

#Diseñado por Arturo Martín
#Proyecto Software Libre DGA

EJECUTOR="$(whoami)"
LOG="vx-regenerar-directorios-perfil-usuarios.log"
USUGRAF="$(vx-usuario-grafico)"
HOMEUSUGRAF="$(vx-home-usuario-grafico "${EJECUTOR}")"

function log_xsession(){
    #
    # Funcion que audita el proceso. Si no se pasa como parámetro el nombre del fichero, dejará un log en /tmp
    # Se auditará en /var/log/vitalinux en el archivo indicado: log_xsession -o nombre_fichero
    #
    while getopts 'o:' OPT; do
        case ${OPT} in
            o) LOGFILE=${OPTARG};;
        esac
    done
    
    if [ "${LOGFILE}" ] ; then
        [ "${EJECUTOR}" == "root" ] && \
        DIRLOG="/var/log/vitalinux" || \
        DIRLOG="${HOMEUSUGRAF}/.vx-logs"
        [ ! -d "${DIRLOG}" ] && mkdir -p "${DIRLOG}"
        LOGFILE="${DIRLOG}/${LOGFILE}"
    else
        LOGFILE="/tmp/logfile.regenerar-entorno-escritorio.log"
    fi
    exec 2>&1
    exec > >(tee -i "${LOGFILE}")
}
# 1) Preparamos la auditoria del servicio:
log_xsession -o "${LOG}"

# Regeneramos el entorno de escritorio de los usuarios:
# 2.1) Si no se pasan parámetros y lo llama el usuario root se regeneran todos los usuarios gráficos
# 2.2) Si no se pasan parámetros y no lo llama el usuario root se regenera la del usuario gráfico actual
# 2.3) Si se le pasan ususarios como parámetros se regeneran únicamente los de esos usuarios
if [[ ! -z "${1}" && "${EJECUTOR}" == "root" ]] ; then
    LISTA_USUARIOS=("${@}")
    elif [[ "${EJECUTOR}" == "root" ]] ; then
    LISTA_USUARIOS=($(vx-usuarios-graficos))
else
    LISTA_USUARIOS=("${EJECUTOR}")
fi

echo "=> $(date) Se va a Regenerar los directorios del perfil del usuario: ${LISTA_USUARIOS[@]}"

# 1) Comenzamos regenerando el contenido del Escritorio y resto de directorios del perfil de los usuarios
for USUARIO in ${LISTA_USUARIOS[@]} ; do
    echo ":=> Sincronizando directorios del usuario: ${USUARIO}"
    HOMEUSUARIO="$(getent passwd "${USUARIO}" | cut -d":" -f6)"
    
    #BASE="$(su "${USUARIO}" -c 'mktemp -d --tmpdir vx-sincro-directorios.XXXXXXXX' --login)"
    ## Definimos los distintos nombres de los directorios del perfil en los 4 idiomas principales:
    # Listas=(Español Inglés Alemán Francés)
    LISTADO_DIRECTORIOS=(Descargas:Downloads:Downloads:Téléchargements \
        Documentos:Documents:Dokumente:Documents \
        Imágenes:Pictures:Bilder:Images \
        Vídeos:Videos:Videos:Vidéos \
        Música:Music:Musik:Musique \
        Plantillas:Templates:Vorlagen:Modèles \
    Público:Public:Öffentlich:Public)
    
    for DIRS in "${LISTADO_DIRECTORIOS[@]}" ; do
        SAVEIFS=${IFS}
        IFS=":"
        LISTA_DIR=( $DIRS )
        BASE="/etc/skel-directorios/${LISTA_DIR[0]}/"
        if test -d "${BASE}" ; then
            for DIR in ${LISTA_DIR[*]} ; do
                # echo "=> Se va a tratar de sincronizar el directorio: \"${DIR}\""
                if test -d "${HOMEUSUARIO}/${DIR}" ; then
                    # if su "${USUARIO}" \
                    # -c 'rsync --delete -rl '${BASE}' '${HOMEUSUARIO}'/'${DIR} \
                    # --login > /dev/null 2>&1; then
                    #     echo "==> OK: Se ha sincronizado el directorio ${DIR} del usuario ${USUARIO} ..."
                    # else
                    #     echo "==> ERROR: No se ha sincronizado el directorio ${DIR} del usuario ${USUARIO} ..."
                    # fi
                    if rsync --delete -rl --chown="${USUARIO}" "${BASE}" "${HOMEUSUARIO}/${DIR}" ; then
                        echo " => OK: Sincronizado ${HOMEUSUARIO}/${DIR} del usuario: ${USUARIO} ..."
                    else
                        echo " => ERROR: No sincronizado ${HOMEUSUARIO}/${DIR} del usuario: ${USUARIO} ..."
                    fi
                fi
            done
        fi
        IFS=${SAVEIFS}
    done
    
    # Eliminamos el registro del Albert (core.db) y sus indexaciones que pudiera existir:
    if [ -d "/etc/skel/.config/albert" ] ; then
        # if ! su "${USUARIO}" \
        # -c 'rsync -ahv --delete /etc/skel/.config/albert '${DIR}'/.config' \
        # --login &> /dev/null ; then
        #     ERRORES=1
        #     echo "ERROR: Problema al copiar Albert en ${DIR} ..."
        # else
        #     echo "OK: copiado Albert en ${DIR} ..."
        # fi
        if rsync -ahv --delete --chown="${USUARIO}" "/etc/skel/.config/albert" "${HOMEUSUARIO}/.config" ; then
            echo "OK: copiado /etc/skel/.config/albert en ${HOMEUSUARIO}/.config"
        else
            echo "ERROR: Problema al copiar /etc/skel/.config/albert en ${HOMEUSUARIO}/.config"
        fi
    else
        echo "Warning: No hay configuración de Albert Launcher"
    fi
done
