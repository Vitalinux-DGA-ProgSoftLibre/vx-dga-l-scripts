#!/bin/bash
# Ultima modificación: [arturo@2020-4-1]
# Proyecto Software Libre DGA

FICHFUNCS="/usr/bin/vx-funcs-bash"
[ -f "${FICHFUNCS}" ] && . "${FICHFUNCS}" "sin-parametros"

EJECUTOR="$(whoami)"

# 1) Preparamos la auditoria del servicio:
LOG="vx-regenerar-directorios-perfil-usuarios.log"
vx-log_xsession -o "${LOG}"

# Regeneramos el entorno de escritorio de los usuarios:
# 2.1) Si no se pasan parámetros y lo llama el usuario root se regeneran todos los usuarios gráficos
# 2.2) Si no se pasan parámetros y no lo llama el usuario root se regenera la del usuario gráfico actual
# 2.3) Si se le pasan ususarios como parámetros se regeneran únicamente los de esos usuarios
# if [[ ! -z "${1}" && "${EJECUTOR}" == "root" ]] ; then
#     LISTA_USUARIOS=("${@}")
#     elif [[ "${EJECUTOR}" == "root" ]] ; then
#     LISTA_USUARIOS=($(vx-usuarios-graficos))
# else
#     LISTA_USUARIOS=("${EJECUTOR}")
# fi

# Los parámetros recibidos para determinar la lista de usuarios afectados puede ser:
# 1) -ug => devolvería el usuario gráfico actual
# 2) -u usu1,usu2,usu3,... => devolvería la lista de que usuarios indicados son reales
# 3) -g grupo1,grupo2,... => devolvería la lista de que usuarios forman parte de esos grupos
# 4) usu1 usu2 usu3 ... => devolvería la lista de usuarios indicados que son reales
# 5) [sin parámetros] => devolvería la lista de todos los usuarios gráficos si el ejecutor es root, o el usuario que ejecuta si no es root
# LISTA_USUARIOS=($(vx-funcs-users vx-lista-usuarios-iniciado-sesion)) || \
# LISTA_USUARIOS=($(vx-funcs-users vx-obtener_lista_usuarios "${@}"))
declare -a LISTA_USUARIOS
# Comprobamos si esta instalado el paquete vx-dga-l-congelar-escritorio, el cual guarda en /tmp/vx-lista-usuarios-iniciado-sesion los usuarios que han iniciado sesión gráfica:
FICH_LISTA_USUARIOS_INICIO_SESION="/tmp/vx-lista-usuarios-iniciado-sesion"
[[ "${EJECUTOR}" == "root" && -z "${1}" && -f "${FICH_LISTA_USUARIOS_INICIO_SESION}" ]] && \
LISTA_USUARIOS=($(cat "${FICH_LISTA_USUARIOS_INICIO_SESION}"))
(( ${#LISTA_USUARIOS[@]} == 0 )) && LISTA_USUARIOS=($(vx-funcs-users vx-obtener_lista_usuarios "${@}"))

TEXTO="Regeneración directorios perfil de usuarios: ${LISTA_USUARIOS[*]}"
vx-echo_log_titulo1 "SRV-CONGELACION-ESCRITORIO" "${TEXTO}"

# 1) Comenzamos regenerando el contenido del Escritorio y resto de directorios del perfil de los usuarios
for USUARIO in ${LISTA_USUARIOS[@]} ; do
    # Comprobamos que el usuario existe y cual es su HOME:
    # vx-funcs-users vx-check_exit_users "${USU}" && \
    # HOMEUSUARIO="$(vx-home-usuario-grafico "${USUARIO}")" || \
    # continue
    
    HOMEUSUARIO="$(vx-home-usuario-grafico "${USUARIO}")"
    
    vx-colorear_echo "azul" "=> Regeneración de directorios del perfil: ${USUARIO}"
    
    #BASE="$(su "${USUARIO}" -c 'mktemp -d --tmpdir vx-sincro-directorios.XXXXXXXX' --login)"
    ## Definimos los distintos nombres de los directorios del perfil en los 4 idiomas principales:
    # Listas=(Español Inglés Alemán Francés)
    LISTADO_DIRECTORIOS=(Descargas:Downloads:Downloads:Téléchargements \
        Documentos:Documents:Dokumente:Documents \
        Imágenes:Pictures:Bilder:Images \
        Vídeos:Videos:Videos:Vidéos \
        Música:Music:Musik:Musique \
        Plantillas:Templates:Vorlagen:Modèles \
    Público:Public:Öffentlich:Public)
    
    for DIRS in "${LISTADO_DIRECTORIOS[@]}" ; do
        SAVEIFS=${IFS}
        IFS=":"
        LISTA_DIR=( $DIRS )
        BASE="/etc/skel-directorios/${LISTA_DIR[0]}/"
        if test -d "${BASE}" ; then
            for DIR in ${LISTA_DIR[*]} ; do
                # echo "=> Se va a tratar de sincronizar el directorio: \"${DIR}\""
                if test -d "${HOMEUSUARIO}/${DIR}" ; then
                    # if su "${USUARIO}" \
                    # -c 'rsync --delete -rl '${BASE}' '${HOMEUSUARIO}'/'${DIR} \
                    # --login > /dev/null 2>&1; then
                    #     echo "==> OK: Se ha sincronizado el directorio ${DIR} del usuario ${USUARIO} ..."
                    # else
                    #     echo "==> ERROR: No se ha sincronizado el directorio ${DIR} del usuario ${USUARIO} ..."
                    # fi
                    getent group "${USUARIO}" > /dev/null 2>&1 && \
                    PROPIETARIO="${USUARIO}:${USUARIO}" || \
                    PROPIETARIO="${USUARIO}"
                    if rsync --delete -ah --chown="${PROPIETARIO}" "${BASE}" "${HOMEUSUARIO}/${DIR}" ; then
                        vx-colorear_echo "verde" " => OK: Sincronizado ${HOMEUSUARIO}/${DIR} del usuario: ${USUARIO} ..."
                    else
                        vx-colorear_echo "rojo" " => ERROR: No sincronizado ${HOMEUSUARIO}/${DIR} del usuario: ${USUARIO} ..."
                    fi
                fi
            done
        fi
        IFS=${SAVEIFS}
    done
    
    # Eliminamos el registro del Albert (core.db) y sus indexaciones que pudiera existir:
    if [ -d "/etc/skel/.config/albert" ] ; then
        # if ! su "${USUARIO}" \
        # -c 'rsync -ahv --delete /etc/skel/.config/albert '${DIR}'/.config' \
        # --login &> /dev/null ; then
        #     ERRORES=1
        #     echo "ERROR: Problema al copiar Albert en ${DIR} ..."
        # else
        #     echo "OK: copiado Albert en ${DIR} ..."
        # fi
        getent group "${USUARIO}" > /dev/null 2>&1 && \
        PROPIETARIO="${USUARIO}:${USUARIO}" || \
        PROPIETARIO="${USUARIO}"
        if rsync -ah --delete --chown="${PROPIETARIO}" "/etc/skel/.config/albert" "${HOMEUSUARIO}/.config" ; then
            vx-colorear_echo "verde" "=> OK: copiado /etc/skel/.config/albert en ${HOMEUSUARIO}/.config"
        else
            vx-colorear_echo "rojo" "=> ERROR: Problema al copiar /etc/skel/.config/albert en ${HOMEUSUARIO}/.config"
        fi
    else
        vx-colorear_echo "rojo" "=> Warning: No hay configuración de Albert Launcher"
    fi
    
    vx-colorear_echo "azul" "=> Terminada Regeneración Directorios del perfil: ${USUARIO}"
    
done
